<?xml version="1.0"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->


<project name="framework" default="main" basedir=".">

    <!--
        ANT_OPTS should have maximum heap size set to at least 256m.  Use the -Xmx999m switch and replace 999 with value.

       <property environment="env"/>
       <echo message="ANT_OPTS is currently set to ${env.ANT_OPTS}.  Please make sure the max heap size is set to at least 256m (-Xmx256m)."/>
    -->

    <property name="FLEX_HOME" value="${basedir}/.."/>
    <property name="projects.dir" value="${FLEX_HOME}/frameworks/projects"/>
    <property name="airframework.dir" value="${projects.dir}/airframework"/>
    <property name="airspark.dir" value="${projects.dir}/airspark"/>
	<property name="apache.dir" value="${projects.dir}/apache"/>
    <property name="mobilecomponents.dir" value="${projects.dir}/mobilecomponents"/>
    <property name="charts.dir" value="${projects.dir}/charts"/>
    <property name="advancedgrids.dir" value="${projects.dir}/advancedgrids"/>
    <property name="core.dir" value="${projects.dir}/core"/>
    <property name="flash-integration.dir" value="${projects.dir}/flash-integration"/>
    <property name="framework.dir" value="${projects.dir}/framework"/>
    <property name="mx.dir" value="${projects.dir}/mx"/>
    <property name="rpc.dir" value="${projects.dir}/rpc"/>
    <property name="spark.dir" value="${projects.dir}/spark"/>
    <property name="sparkskin.dir" value="${projects.dir}/sparkskins"/>
    <property name="spark_dmv.dir" value="${projects.dir}/spark_dmv"/>
    <property name="authoringsupport.dir" value="${projects.dir}/authoringsupport"/>
    <property name="halo.dir" value="${projects.dir}/Halo"/>
    <property name="mobiletheme.dir" value="${projects.dir}/mobiletheme"/>
    <property name="wireframe.dir" value="${projects.dir}/wireframe"/>
    <property name="compc.jvm.args" value="-Xmx384m" />
	
	<!-- Set plyerglobal.version and locale -->
	<loadproperties srcFile="${FLEX_HOME}/frameworks/build.properties"/>
    
    <taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar"/>

    <target name="main" depends="clean,thirdparty-downloads,prepare,flexconfig,framework,mx,spark,airframework,airspark,apache,mobilecomponents,rpc,charts,advancedgrids,core,flash-integration,authoringsupport,bundles,themes,sparkskins,spark_dmv"/>

    <target name="bundles" depends="framework_rb,mx_rb,spark_rb,airframework_rb,airspark_rb,apache_rb,mobilecomponents_rb,rpc_rb,charts_rb,advancedgrids_rb"/>
    
    <target name="prepare" depends="create-description" description="Copies manifests to project directories so the IDE can find them">
        <copy file="${FLEX_HOME}/frameworks/spark-manifest.xml" tofile="${FLEX_HOME}/frameworks/projects/spark/manifest.xml" overwrite="true"/>
    </target>
    
    <!--
       This is typically generated by the top-level build.xml.  
       Temporarily do it here while we are just building frameworks.
    -->
    
    <property name="release" value="Apache Flex 4.6.0"/>    
    <property name="release.version" value="4.6.0"/>    
	<property name="build.number" value="0"/>    

    <target name="create-description" description="This file is used by FlashBuilder to identify the SDK">
        <echo file="${FLEX_HOME}/flex-sdk-description.xml">&lt;?xml version="1.0"?&gt;
&lt;flex-sdk-description&gt;
&lt;name&gt;${release} FP${playerglobal.version} ${locale}&lt;/name&gt;
&lt;version&gt;${release.version}&lt;/version&gt;
&lt;build&gt;${build.number}&lt;/build&gt;
&lt;/flex-sdk-description&gt;
        </echo>
    </target>
			
	<target name="flexconfig" depends="playerglobal-setswfversion" description="Copy the flex config template to flex-config.xml and inject version numbers">
		<copy file="${basedir}/flex-config.template.xml" tofile="${basedir}/flex-config.xml" overwrite="true">
			<filterset>
				<filter token="playerversion" value="${playerglobal.version}"/>
				<filter token="swfversion" value="${playerglobal.swfversion}"/>
				<filter token="locale" value="${locale}"/>
			</filterset>
		</copy>
	</target>
		
	<target name="playerglobal-setswfversion" description="Set the swfversion to insert into the flex config file">
		<condition property="playerglobal.swfversion" value="11">
			<equals arg1="${playerglobal.version}" arg2="10.2" />
		</condition>
		<condition property="playerglobal.swfversion" value="12">
			<equals arg1="${playerglobal.version}" arg2="10.3" />
		</condition>
		<condition property="playerglobal.swfversion" value="13">
			<equals arg1="${playerglobal.version}" arg2="11.0" />
		</condition>
		<condition property="playerglobal.swfversion" value="14">
			<equals arg1="${playerglobal.version}" arg2="11.1" />
		</condition>
		<condition property="playerglobal.swfversion" value="15">
			<equals arg1="${playerglobal.version}" arg2="11.2" />
		</condition>
	</target>	

    <target name="advancedgrids" description="Builds advancedgrids.swc">
        <compc static-link-runtime-shared-libraries="true" fork="true" locale=""
            accessible="true" show-deprecation-warnings="false"
            include-classes="AdvancedDataGridClasses"
            output="${basedir}/libs/advancedgrids.swc" 
            resource-bundle-list="${advancedgrids.dir}/bundles.properties">
            <namespace uri="http://www.adobe.com/2006/mxml" manifest="${advancedgrids.dir}/manifest_advancedgrids.xml"/>
            <include-namespaces uri="http://www.adobe.com/2006/mxml"/>
            <source-path path-element="${advancedgrids.dir}/src"/>
            <source-path path-element="${basedir}/projects/mx/src"/>
        	<library-path/>
            <external-library-path dir="${basedir}/libs">
                <include name="player/${playerglobal.version}/playerglobal.swc"/>
                <include name="framework.swc"/>
                <include name="mx/mx.swc"/>
                <include name="rpc.swc"/>
                <include name="textLayout.swc"/>
             </external-library-path>
            <include-file name="defaults.css" path="${advancedgrids.dir}/data_management.css"/>
            <include-file name="defaults-3.0.0.css" path="${advancedgrids.dir}/data_management-3.0.0.css"/>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>
    
    <target name="advancedgrids_rb" description="Builds locale/en_US/advancedgrids_rb.swc">
        <compc static-link-runtime-shared-libraries="true"  fork="true" 
            output="${basedir}/locale/${locale}/advancedgrids_rb.swc" locale="${locale}">
            <include-resource-bundles bundle="datamanagement"/>
            <include-resource-bundles bundle="olap"/>
            <source-path path-element="${advancedgrids.dir}/bundles/${locale}"/>
            <source-path path-element="${framework.dir}/src"/>
            <external-library-path dir="${basedir}/libs/player/${playerglobal.version}" includes="playerglobal.swc"/>
        	<library-path/>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>   

    <target name="airframework" description="Builds libs/airframework.swc">
        <compc static-link-runtime-shared-libraries="true" fork="true"  locale="" accessible="true"
            include-classes="AIRFrameworkClasses" 
            output="${basedir}/libs/air/airframework.swc"
            resource-bundle-list="${airframework.dir}/bundles.properties">
            <namespace uri="library://ns.adobe.com/flex/mx" manifest="${airframework.dir}/manifest.xml"/>
            <include-namespaces uri="library://ns.adobe.com/flex/mx"/>
            <source-path path-element="${airframework.dir}/src"/>
        	<library-path/>
            <external-library-path dir="${basedir}/libs">
                <include name="air/airglobal.swc"/>
                <include name="framework.swc"/>
                <include name="mx/mx.swc"/>
                <include name="textLayout.swc"/>
            </external-library-path>
            <include-file name="defaults.css" path="${airframework.dir}/defaults.css"/>
            <include-file name="defaults-3.0.0.css" path="${airframework.dir}/defaults-3.0.0.css"/>
            <include-file name="Assets.swf" path="${airframework.dir}/assets/Assets.swf"/>
            <include-file name="ComputerIcon.swf" path="${airframework.dir}/assets/ComputerIcon.swf"/>
            <include-file name="gripper_up.png" path="${airframework.dir}/assets/gripper_up.png"/>
            <include-file name="mac_close_down.png" path="${airframework.dir}/assets/mac_close_down.png"/>
            <include-file name="mac_close_over.png" path="${airframework.dir}/assets/mac_close_over.png"/>
            <include-file name="mac_close_up.png" path="${airframework.dir}/assets/mac_close_up.png"/>
            <include-file name="mac_max_dis.png" path="${airframework.dir}/assets/mac_max_dis.png"/>
            <include-file name="mac_max_down.png" path="${airframework.dir}/assets/mac_max_down.png"/>
            <include-file name="mac_max_over.png" path="${airframework.dir}/assets/mac_max_over.png"/>
            <include-file name="mac_max_up.png" path="${airframework.dir}/assets/mac_max_up.png"/>
            <include-file name="mac_min_dis.png" path="${airframework.dir}/assets/mac_min_dis.png"/>
            <include-file name="mac_min_down.png" path="${airframework.dir}/assets/mac_min_down.png"/>
            <include-file name="mac_min_over.png" path="${airframework.dir}/assets/mac_min_over.png"/>
            <include-file name="mac_min_up.png" path="${airframework.dir}/assets/mac_min_up.png"/>
            <include-file name="win_close_down.png" path="${airframework.dir}/assets/win_close_down.png"/>
            <include-file name="win_close_over.png" path="${airframework.dir}/assets/win_close_over.png"/>
            <include-file name="win_close_up.png" path="${airframework.dir}/assets/win_close_up.png"/>
            <include-file name="win_max_dis.png" path="${airframework.dir}/assets/win_max_dis.png"/>
            <include-file name="win_max_down.png" path="${airframework.dir}/assets/win_max_down.png"/>
            <include-file name="win_max_over.png" path="${airframework.dir}/assets/win_max_over.png"/>
            <include-file name="win_max_up.png" path="${airframework.dir}/assets/win_max_up.png"/>
            <include-file name="win_min_dis.png" path="${airframework.dir}/assets/win_min_dis.png"/>
            <include-file name="win_min_down.png" path="${airframework.dir}/assets/win_min_down.png"/>
            <include-file name="win_min_over.png" path="${airframework.dir}/assets/win_min_over.png"/>
            <include-file name="win_min_up.png" path="${airframework.dir}/assets/win_min_up.png"/>
            <include-file name="win_restore_down.png" path="${airframework.dir}/assets/win_restore_down.png"/>
            <include-file name="win_restore_over.png" path="${airframework.dir}/assets/win_restore_over.png"/>
            <include-file name="win_restore_up.png" path="${airframework.dir}/assets/win_restore_up.png"/>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>

    <target name="airframework_rb" description="Builds locale/en_US/airframework_rb.swc">
        <compc static-link-runtime-shared-libraries="true"  fork="true" 
            output="${basedir}/locale/${locale}/airframework_rb.swc" locale="${locale}">
            <include-resource-bundles bundle="SharedResources"/>
            <include-resource-bundles bundle="aircontrols"/>
            <include-resource-bundles bundle="collections"/>
            <include-resource-bundles bundle="containers"/>
            <include-resource-bundles bundle="controls"/>
            <include-resource-bundles bundle="core"/>
            <include-resource-bundles bundle="effects"/>
            <include-resource-bundles bundle="formatters"/>                        
            <include-resource-bundles bundle="skins"/>
            <include-resource-bundles bundle="styles"/>
            <source-path path-element="${airframework.dir}/bundles/${locale}"/>
            <source-path path-element="${airframework.dir}/src"/>
            <source-path path-element="${framework.dir}/src"/>
            <source-path path-element="${framework.dir}/bundles/${locale}"/>
            <source-path path-element="${basedir}/projects/mx/bundles/${locale}"/>
            <external-library-path dir="${basedir}/libs/player/${playerglobal.version}" includes="playerglobal.swc"/>
        	<library-path/>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>
    
    <target name="airspark" description="Builds libs/airspark.swc">
        <compc static-link-runtime-shared-libraries="true"  fork="true" locale="" accessible="true"
            include-classes="AIRSparkClasses" output="${basedir}/libs/air/airspark.swc"              
            resource-bundle-list="${airspark.dir}/bundles.properties">
            <namespace uri="library://ns.adobe.com/flex/spark" manifest="${airspark.dir}/manifest.xml"/>
            <include-namespaces uri="library://ns.adobe.com/flex/spark"/>
            <source-path path-element="${airspark.dir}/src"/>
            <library-path/>
            <external-library-path dir="${basedir}/libs">
                <include name="air/airglobal.swc"/>
                <include name="air/airframework.swc"/>
                <include name="framework.swc"/>
                <include name="mx/mx.swc"/>
                <include name="textLayout.swc"/>
                <include name="spark.swc"/>
            </external-library-path>
            <include-file name="defaults.css" path="${airspark.dir}/defaults.css"/>
            <keep-as3-metadata name="SkinPart"/>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>
            
    <target name="airspark_rb" description="Builds locale/en_US/airspark_rb.swc">
        <compc static-link-runtime-shared-libraries="true" fork="true" locale="${locale}"
            output="${basedir}/locale/${locale}/airspark_rb.swc">
            <include-resource-bundles bundle="core"/>
            <source-path path-element="${framework.dir}/bundles/${locale}"/>
            <source-path path-element="${framework.dir}/src"/>
            <external-library-path dir="${basedir}/libs/player/${playerglobal.version}" includes="playerglobal.swc"/>
        	<library-path/>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>
	
    <target name="apache" description="Builds apache.swc">
        <compc static-link-runtime-shared-libraries="true" fork="true" locale="" accessible="true"
            show-deprecation-warnings="false"
            include-classes="ApacheClasses"
            output="${basedir}/libs/apache.swc" 
            resource-bundle-list="${apache.dir}/bundles.properties">
            <namespace uri="http://www.adobe.org/flex" manifest="${apache.dir}/manifest.xml"/>
            <include-namespaces uri="http://www.adobe.org/flex"/>
            <source-path path-element="${apache.dir}/src"/>
            <library-path/>
            <external-library-path dir="${basedir}/libs">
            	<!-- Just an initial guess more will need to be added -->
                <include name="player/${playerglobal.version}/playerglobal.swc"/>
            	<include name="framework.swc"/>
            	<include name="spark.swc"/>
                <include name="textLayout.swc"/>
             </external-library-path>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>
    
    <target name="apache_rb" description="Builds locale apache_rb.swc">
        <compc static-link-runtime-shared-libraries="true" fork="true" locale="${locale}"
            output="${basedir}/locale/${locale}/apache_rb.swc">          
            <include-resource-bundles bundle="validators"/>
            <source-path path-element="${apache.dir}/bundles/${locale}"/>
            <source-path path-element="${framework.dir}/src"/>
            <external-library-path dir="${basedir}/libs/player/${playerglobal.version}" includes="playerglobal.swc"/>
        	<library-path/>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>

		<asdoc output="${FLEX_HOME}/tempDoc" lenient="true" failonerror="true" keep-xml="true" skip-xsl="true" fork="true">
		    <compiler.source-path path-element="${apache.dir}/src"/>
			<doc-namespaces uri="http://www.apache.org/flex"/>
		    <namespace uri="http://www.apache.org/flex" manifest="${basedir}/apache-manifest.xml"/>
		    <jvmarg line="-Xmx512m"/>
		</asdoc>

		<zip destfile="${basedir}/locale/${locale}/apache_rb.swc" update="true">
		    <zipfileset dir="${FLEX_HOME}/tempDoc/tempdita" prefix="docs">
			    <include name="*.xml"/>
				<exclude name="ASDoc_Config.xml"/>
				<exclude name="overviews.xml"/>
		    </zipfileset>
		</zip>
  	
    </target>

    <target name="charts" description="Builds charts.swc">
        <compc static-link-runtime-shared-libraries="true" fork="true" locale="" accessible="true"
            show-deprecation-warnings="false"
            include-classes="ChartsClasses"
             output="${basedir}/libs/charts.swc" 
            resource-bundle-list="${charts.dir}/bundles.properties">
            <namespace uri="http://www.adobe.com/2006/mxml" manifest="${charts.dir}/manifest_charts.xml"/>
            <include-namespaces uri="http://www.adobe.com/2006/mxml"/>
            <source-path path-element="${charts.dir}/src"/>
            <source-path path-element="${basedir}/projects/mx/src"/>
            <library-path/>
            <external-library-path dir="${basedir}/libs">
                <include name="player/${playerglobal.version}/playerglobal.swc"/>
                <include name="framework.swc"/>
                <include name="rpc.swc"/>
                <include name="textLayout.swc"/>
             </external-library-path>
            <include-file name="defaults.css" path="${charts.dir}/charts.css"/>
            <include-file name="defaults-4.1.0.css" path="${charts.dir}/charts-4.X.0.css"/>
            <include-file name="defaults-4.0.0.css" path="${charts.dir}/charts-4.X.0.css"/>
            <include-file name="defaults-3.0.0.css" path="${charts.dir}/charts-3.0.0.css"/>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>
    
    <target name="charts_rb" description="Builds locale/en_US/charts_rb.swc">
        <compc static-link-runtime-shared-libraries="true" fork="true" locale="${locale}"
            output="${basedir}/locale/${locale}/charts_rb.swc">          
            <include-resource-bundles bundle="charts"/>
            <source-path path-element="${charts.dir}/bundles/${locale}"/>
            <source-path path-element="${framework.dir}/src"/>
            <external-library-path dir="${basedir}/libs/player/${playerglobal.version}" includes="playerglobal.swc"/>
        	<library-path/>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>
    
    <target name="core" description="Builds core.swc">
        <compc static-link-runtime-shared-libraries="true"  fork="true" include-classes="CoreClasses" 
            output="${basedir}/libs/core.swc" locale="" accessible="true"
            resource-bundle-list="${core.dir}/bundles.properties">
            <source-path path-element="${core.dir}/src"/>
            <source-path path-element="${framework.dir}/src"/>
            <load-config filename="${framework.dir}/framework-config.xml"/>
            <library-path/>
            <external-library-path dir="${basedir}/libs">
                <include name="player/${playerglobal.version}/playerglobal.swc"/>
                <include name="textLayout.swc"/>
                <include name="osmf.swc"/>
            </external-library-path>
            <keep-as3-metadata name="Bindable"/>
            <keep-as3-metadata name="Managed"/>
            <keep-as3-metadata name="ChangeEvent"/>
            <keep-as3-metadata name="NonCommittingChangeEvent"/>
            <keep-as3-metadata name="Transient"/>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>
        
    <target name="flash-integration" description="Builds flash-integration.swc">
        <compc static-link-runtime-shared-libraries="true"  fork="true" output="${basedir}/libs/flash-integration.swc"
        locale="" accessible="true">            
            <namespace uri="http://www.adobe.com/someNonSensicalURI" manifest="${flash-integration.dir}/manifest.xml"/>
            <!-- doesn't matter what we put in here as long as it links in the classes.
                Flash Authoring ignores this and the namespace it's mapped too...
                it just needs to be linked through a manifest file -->
            <include-namespaces uri="http://www.adobe.com/someNonSensicalURI"/>
            <source-path path-element="${flash-integration.dir}/src"/>
            <load-config filename="${basedir}/projects/framework/framework-config.xml"/>
        	<library-path/>
            <external-library-path dir="${basedir}/libs">
                <include name="player/${playerglobal.version}/playerglobal.swc"/>
                <include name="textLayout.swc"/>
                <include name="framework.swc"/>
            </external-library-path>
            <compute-digest>false</compute-digest>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>
    
    <target name="framework" description="Builds libs/framework.swc">
        <compc static-link-runtime-shared-libraries="true"  fork="true" include-classes="FrameworkClasses" 
            output="${basedir}/libs/framework.swc" locale="" accessible="true"
            resource-bundle-list="${framework.dir}/bundles.properties">
            <namespace uri="library://ns.adobe.com/flex/mx" manifest="${framework.dir}/manifest.xml"/>
            <namespace uri="http://www.adobe.com/2006/mxml" manifest="${framework.dir}/manifest.xml"/>
            <include-namespaces uri="library://ns.adobe.com/flex/mx"/>
            <source-path path-element="${framework.dir}/src"/>
            <external-library-path dir="${basedir}/libs">
                <include name="player/${playerglobal.version}/playerglobal.swc"/>
                <include name="textLayout.swc"/>
                <include name="osmf.swc"/>
            </external-library-path>
            <load-config filename="${basedir}/flex-config.xml"/>
            <load-config filename="${framework.dir}/framework-config.xml"/>
        	<library-path/>
            <include-file name="defaults.css" path="${framework.dir}/defaults.css"/>
            <include-file name="defaults-3.0.0.css" path="${framework.dir}/defaults-3.0.0.css"/>
            <include-file name="Assets.swf" path="${framework.dir}/assets/Assets.swf"/>
            <include-file name="assets/CalendarIcon.png" path="${framework.dir}/assets/CalendarIcon.png"/>
            <keep-as3-metadata name="Bindable" />
            <keep-as3-metadata name="Managed" />
            <keep-as3-metadata name="ChangeEvent" />
            <keep-as3-metadata name="NonCommittingChangeEvent" />
            <keep-as3-metadata name="Transient" />          
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>

    <target name="framework_rb" description="Builds locale/en_US/framework_rb.swc">
        <compc static-link-runtime-shared-libraries="true"  fork="true" 
            output="${basedir}/locale/${locale}/framework_rb.swc" locale="${locale}">
            <include-resource-bundles bundle="SharedResources"/>
            <include-resource-bundles bundle="collections"/>
            <include-resource-bundles bundle="controls"/>
            <include-resource-bundles bundle="core"/>
            <include-resource-bundles bundle="effects"/>
            <include-resource-bundles bundle="formatters"/>
            <include-resource-bundles bundle="logging"/>
            <include-resource-bundles bundle="modules"/>
            <include-resource-bundles bundle="skins"/>
            <include-resource-bundles bundle="states"/>
            <include-resource-bundles bundle="styles"/>
            <include-resource-bundles bundle="utils"/>
            <include-resource-bundles bundle="validators"/>
            <source-path path-element="${framework.dir}/bundles/${locale}"/>
            <source-path path-element="${framework.dir}/src"/>
            <external-library-path dir="${basedir}/libs/player/${playerglobal.version}" includes="playerglobal.swc"/>
        	<library-path/>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>   
    
    <target name="mobilecomponents" description="Builds libs/mobilecomponents.swc">
        <compc static-link-runtime-shared-libraries="true"  fork="true" locale="" accessible="true"
            include-classes="MobileComponentsClasses spark.transitions.FlipViewTransitionMode spark.transitions.ZoomViewTransitionMode" 
            output="${basedir}/libs/mobile/mobilecomponents.swc" 
            resource-bundle-list="${mobilecomponents.dir}/bundles.properties">            
            <namespace uri="library://ns.adobe.com/flex/spark" manifest="${mobilecomponents.dir}/manifest.xml"/>
            <include-namespaces uri="library://ns.adobe.com/flex/spark"/>
            <source-path path-element="${mobilecomponents.dir}/src"/>
        	<library-path/>
            <external-library-path dir="${basedir}/libs">
                <include name="air/airglobal.swc"/>
                <include name="framework.swc"/>
                <include name="spark.swc"/>
                <include name="textLayout.swc"/>
            </external-library-path>
            <keep-as3-metadata name="SkinPart"/>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>
            
    <target name="mobilecomponents_rb" description="Builds locale/en_US/mobilecomponents_rb.swc">
        <compc static-link-runtime-shared-libraries="true"  fork="true" 
            output="${basedir}/locale/${locale}/mobilecomponents_rb.swc" locale="${locale}">
            <include-resource-bundles bundle="core"/>
            <source-path path-element="${framework.dir}/bundles/${locale}"/>
            <source-path path-element="${framework.dir}/src"/>
            <external-library-path dir="${basedir}/libs/player/${playerglobal.version}" includes="playerglobal.swc"/>
        	<library-path/>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>


   <target name="mx" description="Builds the mx/mx.swc">
        <compc static-link-runtime-shared-libraries="true" fork="true" locale="" accessible="true" 
            include-classes="MxClasses" output="${basedir}/libs/mx/mx.swc"
            resource-bundle-list="${mx.dir}/bundles.properties">
            <namespace uri="library://ns.adobe.com/flex/mx" manifest="${mx.dir}/manifest.xml"/>
            <namespace uri="http://www.adobe.com/2006/mxml" manifest="${mx.dir}/manifest.xml"/>
            <include-namespaces uri="library://ns.adobe.com/flex/mx"/>
            <source-path path-element="${mx.dir}/src"/>
        	<library-path />
            <external-library-path dir="${basedir}/libs">
                <include name="player/${playerglobal.version}/playerglobal.swc"/>
                <include name="framework.swc"/>
                <include name="textLayout.swc"/>
            </external-library-path>
            <include-file name="defaults.css" path="${mx.dir}/defaults.css"/>
            <include-file name="defaults-3.0.0.css" path="${mx.dir}/defaults-3.0.0.css"/>
            <jvmarg line="${compc.jvm.args}"/>
            <keep-as3-metadata name="Bindable"/>
            <keep-as3-metadata name="Managed"/>
            <keep-as3-metadata name="ChangeEvent"/>
            <keep-as3-metadata name="NonCommittingChangeEvent"/>
            <keep-as3-metadata name="Transient"/>
        </compc>
    </target>
    
    <target name="mx_rb" description="Builds locale/en_US/mx_rb.swc">
        <compc static-link-runtime-shared-libraries="true"  fork="true" locale="${locale}" 
            output="${basedir}/locale/${locale}/mx_rb.swc">
            <include-resource-bundles bundle="containers"/>
            <source-path path-element="${mx.dir}/bundles/${locale}"/>
            <source-path path-element="${mx.dir}/src"/>
            <external-library-path dir="${basedir}/libs/player/${playerglobal.version}" includes="playerglobal.swc"/>
            <external-library-path dir="${basedir}/libs">
                <include name="player/${playerglobal.version}/playerglobal.swc"/>
                <include name="framework.swc"/>
            </external-library-path>
        	<library-path/>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>   
    
    <target name="rpc" description="Builds libs/rpc.swc">
        <echo file="${basedir}/version.properties" append="false">build=${build.number}</echo>
        <compc static-link-runtime-shared-libraries="true" fork="true" locale="" accessible="true"
            include-classes="RPCClasses" output="${basedir}/libs/rpc.swc"
            resource-bundle-list="${rpc.dir}/bundles.properties">
 			<namespace uri="library://ns.adobe.com/flex/mx" manifest="${rpc.dir}/manifest.xml"/>
            <include-file name="version.properties" path="${basedir}/version.properties"/>
            <include-namespaces uri="library://ns.adobe.com/flex/mx"/>
            <source-path path-element="${rpc.dir}/src"/>
            <external-library-path dir="${basedir}/libs">
                <include name="player/${playerglobal.version}/playerglobal.swc"/>
                <include name="framework.swc"/>
                <include name="textLayout.swc"/>
                <include name="osmf.swc"/>
            </external-library-path>
            <library-path/>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
        <delete file="${basedir}/version.properties"/>
    </target>
    
    <target name="rpc_rb" description="Builds locale/en_US/rpc_rb.swc">
        <compc static-link-runtime-shared-libraries="true"  fork="true"  locale="${locale}"
            output="${basedir}/locale/${locale}/rpc_rb.swc">
            <include-resource-bundles bundle="collections"/>
            <include-resource-bundles bundle="core"/>
            <include-resource-bundles bundle="logging"/>
            <include-resource-bundles bundle="messaging"/>
            <include-resource-bundles bundle="rpc"/>
            <include-resource-bundles bundle="styles"/>
            <include-resource-bundles bundle="utils"/>
            <source-path path-element="${rpc.dir}/bundles/${locale}"/>
            <source-path path-element="${framework.dir}/bundles/${locale}"/>
            <source-path path-element="${framework.dir}/src"/>
            <external-library-path dir="${basedir}/libs/player/${playerglobal.version}" includes="playerglobal.swc"/>
        	<library-path/>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>
    
    <target name="spark" description="Builds the spark.swc">
        <compc static-link-runtime-shared-libraries="true" fork="true" locale="" accessible="true"
            include-classes="SparkClasses" output="${basedir}/libs/spark.swc"
            resource-bundle-list="${spark.dir}/bundles.properties">
            <namespace uri="library://ns.adobe.com/flex/spark" manifest="${spark.dir}/manifest.xml"/>
            <include-namespaces uri="library://ns.adobe.com/flex/spark"/>
            <source-path path-element="${spark.dir}/src"/>
        	<library-path />
            <external-library-path dir="${basedir}/libs">
                <include name="player/${playerglobal.version}/playerglobal.swc"/>
                <include name="framework.swc"/>
                <include name="mx/mx.swc"/>
                <include name="textLayout.swc"/>
                <include name="osmf.swc"/>
            </external-library-path>
            <include-file name="defaults.css" path="${spark.dir}/defaults.css"/>
            <include-file name="assets/ErrorIndicator.png" path="${spark.dir}/assets/ErrorIndicator.png"/>
            <include-file name="assets/RequiredIndicator.png" path="${spark.dir}/assets/RequiredIndicator.png"/>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>

    <target name="spark_dmv" description="Builds the spark_dmv.swc">
        <compc static-link-runtime-shared-libraries="true" fork="true" locale="" accessible="true" 
            include-classes="SparkDmvClasses" 
            output="${basedir}/libs/spark_dmv.swc" 
            resource-bundle-list="${spark_dmv.dir}/bundles.properties">
            <namespace uri="library://ns.adobe.com/flex/spark" manifest="${spark_dmv.dir}/manifest_spark_dmv.xml"/>
            <include-namespaces uri="library://ns.adobe.com/flex/spark"/>
            <source-path path-element="${spark_dmv.dir}/src"/>
        	<library-path />
            <external-library-path dir="${basedir}/libs">
                <include name="player/${playerglobal.version}/playerglobal.swc"/>
                <include name="framework.swc"/>
                <include name="mx/mx.swc"/>
                <include name="spark.swc"/>
                <include name="advancedgrids.swc"/>
                <include name="textLayout.swc"/>
                <include name="osmf.swc"/>
            </external-library-path>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>
    
    <target name="spark_rb">
        <echo message="Compiling frameworks/locale/${locale}/spark_rb.swc"/>
        <compc static-link-runtime-shared-libraries="true" fork="true" locale="${locale}"
            output="${basedir}/locale/${locale}/spark_rb.swc">
            <include-resource-bundles bundle="components"/>
            <include-resource-bundles bundle="sparkEffects"/>
            <include-resource-bundles bundle="layout"/>
            <include-resource-bundles bundle="textLayout"/>
            <include-resource-bundles bundle="osmf"/>
            <source-path path-element="${spark.dir}/bundles/${locale}"/>
            <source-path path-element="${spark.dir}/src"/>
            <source-path path-element="${framework.dir}/src"/>
            <include-libraries/>
        	<library-path/>
			<external-library-path dir="${basedir}/libs/player/${playerglobal.version}" includes="playerglobal.swc"/>
			<jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>
    
    <target name="sparkskins" description="Builds the sparkskin.swc">
        <compc static-link-runtime-shared-libraries="true"  fork="true" locale="" accessible="true" 
            include-classes="SparkSkinsClasses"
            output="${basedir}/libs/sparkskins.swc"
            resource-bundle-list="${core.dir}/bundles.properties">
            <source-path path-element="${sparkskin.dir}/src"/>
        	<library-path/>
            <external-library-path dir="${basedir}/libs">
                <include name="player/${playerglobal.version}/playerglobal.swc"/>
                <include name="framework.swc"/>
                <include name="spark.swc"/>
                <include name="textLayout.swc"/>
                <include name="osmf.swc"/>
            </external-library-path>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>
        
    <target name="authoringsupport" description="Builds authoringsupport.swc">
        <compc static-link-runtime-shared-libraries="true"  fork="true" 
            output="${basedir}/libs/authoringsupport.swc" include-classes="AuthoringSupportClasses"
            locale="" accessible="true"
            resource-bundle-list="${authoringsupport.dir}/bundles.properties">
            <source-path path-element="${authoringsupport.dir}/src"/>
            <library-path dir="${authoringsupport.dir}/libs">
 			<include name="FlexContentHolderThumbnail.swc"/>
            </library-path>
            <external-library-path dir="${basedir}/libs">
                <include name="player/${playerglobal.version}/playerglobal.swc"/>
                <include name="framework.swc"/>
                <include name="mx/mx.swc"/>
                <include name="flash-integration.swc"/>
                <include name="textLayout.swc"/>
            </external-library-path>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>

    <!-- Build themes code -->
    <target name="themes" depends="halo, mobiletheme,wireframe" description="Builds themes"/>
    
    <target name="halo" description="Builds themes/Halo/halo.swc">
        <compc static-link-runtime-shared-libraries="true"  fork="true"
            output="${basedir}/themes/Halo/halo.swc" locale="" accessible="true"
            resource-bundle-list="${halo.dir}/bundles.properties">            
            <source-path/>
        	<library-path/>
            <external-library-path dir="${basedir}/libs">
                <include name="player/${playerglobal.version}/playerglobal.swc"/>
                <include name="framework.swc"/>
                <include name="mx/mx.swc"/>
                <include name="textLayout.swc"/>
            </external-library-path>
            <include-file name="defaults.css" path="${halo.dir}/defaults.css"/>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>

    <target name="mobiletheme" description="Builds themes/Mobile/mobile.swc">
        <compc static-link-runtime-shared-libraries="true"  fork="true" include-classes="MobileThemeClasses" 
            output="${basedir}/themes/Mobile/mobile.swc" locale="" accessible="true"
            resource-bundle-list="${mobiletheme.dir}/bundles.properties">            
            <source-path path-element="${mobiletheme.dir}/src"/>         
        	<library-path/>
            <external-library-path dir="${basedir}/libs">
                <include name="player/${playerglobal.version}/playerglobal.swc"/>
                <include name="mobile/mobilecomponents.swc"/>
                <include name="framework.swc"/>
                <include name="spark.swc"/>
                <include name="textLayout.swc"/>
                <include name="osmf.swc"/>
            </external-library-path>
            <include-file name="defaults.css" path="${mobiletheme.dir}/defaults.css"/>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>
            
    <target name="wireframe" description="Builds the wireframe.swc">
        <compc static-link-runtime-shared-libraries="true"  fork="true" 
            output="${basedir}/themes/Wireframe/wireframe.swc"
            resource-bundle-list="${wireframe.dir}/bundles.properties">
            <include-classes>WireframeClasses</include-classes>
            <source-path path-element="${wireframe.dir}/src"/>
        	<library-path/>
            <external-library-path dir="${basedir}/libs">
                <include name="player/${playerglobal.version}/playerglobal.swc"/>
                <include name="framework.swc"/>
                <include name="spark.swc"/>
                <include name="airspark.swc"/>
                <include name="textLayout.swc"/>
                <include name="osmf.swc"/>
            </external-library-path>
            <include-file name="defaults.css" path="${wireframe.dir}/defaults.css"/>
            <include-file name="assets/Tree_folderClosedIcon.png" path="${wireframe.dir}/assets/Tree_folderClosedIcon.png"/>
            <include-file name="assets/Tree_folderOpenIcon.png" path="${wireframe.dir}/assets/Tree_folderOpenIcon.png"/>
            <locale/>
            <accessible>true</accessible>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>
        
    <!-- Download thirdparty code -->
    
    <target name="thirdparty-downloads" 
        depends="airsdk-download,playerglobal-download, osmf-download, textLayout-download" 
        description="Copies third-party software into place for build" />
    
    <target name="airsdk-check" description="Checks if the Air SDK has been downloaded.">
        <available file="${basedir}/libs/air/airglobal.swc" property="airsdk.present"/>
    </target>

    <target name="playerglobal-check" description="Checks if the Adobe Air SDK has been downloaded.">
        <available file="${basedir}/libs/player/${playerglobal.version}/playerglobal.swc" property="playerglobal.swc.present"/>
    </target>
    
    <target name="osmf-check" description="Checks if the Open Source Media Framework has been downloaded.">
        <available file="${basedir}/libs/osmf.swc" property="osmf.swc.present"/>
    </target>
    
    <target name="textLayout-check" description="Checks if the Text Layout Framework has been downloaded.">
        <available file="${basedir}/libs/textLayout.swc" property="textLayout.swc.present"/>
    </target>

    <!-- Adobe AIR SDK  -->
    <!-- Because this requires a network connection it is copied only if it doesn't already exist. -->
    <!-- Regardless of platform use the win kit to get airglobal.swc. -->
    
    <target name="airsdk-download" depends="airsdk-check" unless="airsdk.present" description="Copies Adobe AIR SDK for the Mac from the Adobe website">
        <echo message="Be patient.  This takes a few minutes..." />
        <mkdir dir="${FLEX_HOME}/in/air/win"/>
        <get src="http://airdownload.adobe.com/air/win/download/3.1/AdobeAIRSDK.zip" 
            dest="${FLEX_HOME}/in/air/win/AIR Integration Kit.zip" 
            verbose="false"/>
        <unzip dest="${FLEX_HOME}/in/downloads/AIR Integration Kit" src="${FLEX_HOME}/in/air/win/AIR Integration Kit.zip" />
        <copy file="${FLEX_HOME}/in/downloads/AIR Integration Kit/frameworks/libs/air/airglobal.swc" 
            toDir="${basedir}/libs/air"/>
        <delete dir="${FLEX_HOME}/in/downloads/AIR Integration Kit" failonerror="false"/>
    </target>
        
    <!-- playerglobal.swc -->
    <!-- Because this requires a network connection it copies playglobal.swc only if it doesn't already exist. -->	
	<target name="playerglobal-download" depends="playerglobal-check,playerglobal-settarget,playerglobal.failure,playerglobal10.3-download,playerglobal11.0-download,playerglobal11.1-download,playerglobal11.2-download,playerglobal11.2RC-download" description="Copies playerglobal.swc from the Adobe website">
    </target>
	
	<target name="playerglobal-settarget" unless="playerglobal.swc.present">
		<condition property="target10.2">
			<equals arg1="${playerglobal.version}" arg2="10.2" />
		</condition>
		<condition property="target10.3">
			<equals arg1="${playerglobal.version}" arg2="10.3" />
		</condition>
		<condition property="target11.0">
			<equals arg1="${playerglobal.version}" arg2="11.0" />
		</condition>
		<condition property="target11.1">
			<equals arg1="${playerglobal.version}" arg2="11.1" />
		</condition>
		<!-- Change to target11.2beta or target11.1RC depending on version of 11.2 you want to target -->
		<condition property="target11.2RC">
			<equals arg1="${playerglobal.version}" arg2="11.2" />
		</condition>
	 </target>
	
	<target name="playerglobal.failure" if="target10.2">
		<fail message="There's no public download link for the Flash Player 10.2 playerglobal.swc. You will need to find your own copy." />
	</target>
		
    <target name="playerglobal10.3-download" if="target10.3">
    	<mkdir dir="${basedir}/libs/player/${playerglobal.version}"/>
        <get src="http://fpdownload.macromedia.com/pub/flashplayer/updaters/10/playerglobal10_3.swc" 
            dest="${basedir}/libs/player/${playerglobal.version}/playerglobal.swc" 
            verbose="false"/>
    </target>
	
    <target name="playerglobal11.0-download" if="target11.0">
    	<mkdir dir="${basedir}/libs/player/${playerglobal.version}"/>
        <get src="http://fpdownload.macromedia.com/pub/flashplayer/updaters/11/playerglobal11_0.swc" 
            dest="${basedir}/libs/player/${playerglobal.version}/playerglobal.swc" 
            verbose="false"/>
    </target> 
	
    <target name="playerglobal11.1-download" if="target11.1">
    	<mkdir dir="${basedir}/libs/player/${playerglobal.version}"/>
        <get src="http://fpdownload.macromedia.com/pub/flashplayer/updaters/11/playerglobal11_0.swc" 
            dest="${basedir}/libs/player/${playerglobal.version}/playerglobal.swc" 
            verbose="false"/>
    </target> 
    
	<!-- Flash Player 11.2 beta -->
    <target name="playerglobal11.2-download" if="target11.2beta">
    	<mkdir dir="${basedir}/libs/player/${playerglobal.version}"/>
        <get src="http://download.macromedia.com/pub/labs/flashplatformruntimes/flashplayer11-2/flashplayer11-2_p5_playerglobal_013112.swc" 
            dest="${basedir}/libs/player/${playerglobal.version}/playerglobal.swc" 
            verbose="false"/>
    </target>
    
	<!-- Flash Player 11.2 release condidate -->
    <target name="playerglobal11.2RC-download" if="target11.2RC">
    	<mkdir dir="${basedir}/libs/player/${playerglobal.version}"/>
        <get src="http://download.macromedia.com/pub/labs/flashplatformruntimes/flashplayer11-2/flashplayer11-2_p6_playerglobal_022712.swc" 
            dest="${basedir}/libs/player/${playerglobal.version}/playerglobal.swc" 
            verbose="false"/>
    </target> 

    <!-- osmf.swc (Version 1.0) -->
    <!-- Because this requires a network connection it downloads OSMF only if it doesn't already exist. -->
    <!-- The swc at the top-level has lots of trace statements in it.  Use the one in the source zip. -->
    <target name="osmf-download" depends="osmf-check" unless="osmf.swc.present" description="Copies Text Layout Framework from Sourceforge">
        <mkdir dir="${FLEX_HOME}/in/downloads/OSMF_1.0"/>
        <get src="http://sourceforge.net/projects/osmf.adobe/files/OSMF%201.0%20%28final%20source%2C%20ASDocs%2C%20PDF%20guides%2C%20and%20release%20notes%29/OSMF_1.0.zip/download" 
            dest="${FLEX_HOME}/in/downloads/OSMF_1.0.zip" 
            verbose="false"/>
        <unzip dest="${FLEX_HOME}/in/downloads/OSMF_1.0" src="${FLEX_HOME}/in/downloads/OSMF_1.0.zip" />
        <unzip dest="${FLEX_HOME}/in/downloads/OSMF_1.0/osmf_source_v1-0" src="${FLEX_HOME}/in/downloads/OSMF_1.0/osmf_source_v1-0.zip" />
        <copy file="${FLEX_HOME}/in/downloads/OSMF_1.0/osmf_source_v1-0/OSMF.swc" tofile="${basedir}/libs/osmf.swc"/>
        <delete dir="${FLEX_HOME}/in/downloads/OSMF_1.0" failonerror="false"/>
    </target>

    <!-- textLayout.swc (Version 2.0.232) -->
    <!-- Because this requires a network connection it downloads TLF only if it doesn't already exist. -->
    <target name="textLayout-download" depends="textLayout-check" unless="textLayout.swc.present" description="Copies Text Layout Framework from Sourceforge">
        <mkdir dir="${FLEX_HOME}/in/downloads/textLayout_build"/>
        <get src="http://sourceforge.net/projects/tlf.adobe/files/2.0/232/textLayout_build.zip/download" 
            dest="${FLEX_HOME}/in/downloads/textLayout_build.zip" 
            verbose="false"/>
        <unzip dest="${FLEX_HOME}/in/downloads/textLayout_build" src="${FLEX_HOME}/in/downloads/textLayout_build.zip" />
        <copy file="${FLEX_HOME}/in/downloads/textLayout_build/libs/textLayout.swc" todir="${basedir}/libs"/>
        <copy todir="${basedir}/projects/textLayout">
            <fileset dir="${FLEX_HOME}/in/downloads/textLayout_build">
                <include name="**/**"/>
                <exclude name="textLayout_build.zip"/>
                <exclude name="build.xml"/>
                <exclude name="libs/**"/>
            </fileset>
        </copy>
        <delete dir="${FLEX_HOME}/in/downloads/textLayout_build" failonerror="false"/>
    </target>

    <target name="clean" depends="bundles-clean" description="Cleans all SWCs.">
        <delete failonerror="false">
            <fileset dir="${basedir}/libs">
                <include name="air/airframework.swc"/>
            	<include name="air/airspark.swc"/>
                <include name="mobile/mobilecomponents.swc"/>
                <include name="spark_dmv.swc"/>
                <include name="charts.swc"/>
                <include name="advancedgrids.swc"/>
                <include name="framework.swc"/>
                <include name="core.swc"/>
                <include name="rpc.swc"/>
                <include name="sparkskins.swc"/>
                <include name="spark.swc"/>
                <include name="authoringsupport.swc"/>
            	<include name="flash-integration.swc"/>
            	<include name="apache.swc"/>
            </fileset>
            <fileset dir="${basedir}/themes/Halo" includes="halo.swc"/>
            <fileset dir="${basedir}/themes/Mobile" includes="mobile.swc"/>
            <fileset dir="${basedir}/themes/Wireframe" includes="wireframe.swc"/>
        </delete>
        <delete dir="${basedir}/libs/mx"/>
        <delete dir="${basedir}/libs/mobile"/>
    </target>

    <target name="bundles-clean" description="Cleans all the resource bundles">
        <delete failonerror="false">
            <fileset dir="${basedir}/locale/${locale}">
                <include name="airframework_rb.swc"/>
                <include name="airspark_rb.swc"/>
                <include name="mobilecomponents_rb.swc"/>
                <include name="charts_rb.swc"/>
                <include name="advancedgrids_rb.swc"/>
                <include name="framework_rb.swc"/>
                <include name="mx_rb.swc"/>
                <include name="rpc_rb.swc"/>
                <include name="spark_rb.swc"/>
            	<include name="apache_rb.swc"/>
            </fileset>
        </delete>
        <delete dir="${basedir}/projects" includes="*/bundles.properties"/>
    </target>

    <target name="thirdparty-clean" description="Cleans thirdparty downloaded files.">
        <delete failonerror="false" verbose="true">
            <fileset dir="${basedir}/libs" includes="osmf.swc,textLayout.swc"/>
            <fileset dir="${basedir}/libs/air"/>
            <fileset dir="${basedir}/libs/player/${playerglobal.version}" includes="playerglobal.swc"/>
        </delete>
        <delete dir="${FLEX_HOME}/in/air" excludes="*.xml"/>
        <delete dir="${FLEX_HOME}/in/downloads"/>
        
        <!-- textLayout source -->
        <delete failonerror="false" verbose="false">
             <fileset dir="${basedir}/projects/textLayout">
                 <include name="**/**"/>
                 <exclude name="build.xml"/>
                 <exclude name="**/.settings/**"/>
                 <exclude name="**/.actionScriptProperties"/>
                 <exclude name="**/.flexLibProperties"/>
                 <exclude name="**/.project"/>
             </fileset>
         </delete>
     </target>
</project>
